[1/5] cd /usr/local/src/VSCP/can4vscp-frankfurt-wifi/firmware/security_responder/build/esp-idf/esptool_py && /home/akhe/.espressif/python_env/idf5.0_py3.10_env/bin/python /usr/local/src/esp/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /usr/local/src/VSCP/can4vscp-frankfurt-wifi/firmware/security_responder/build/partition_table/partition-table.bin /usr/local/src/VSCP/can4vscp-frankfurt-wifi/firmware/security_responder/build/security_responder.bin
security_responder.bin binary size 0xa3d10 bytes. Smallest app partition is 0x100000 bytes. 0x5c2f0 bytes (36%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /usr/local/src/VSCP/can4vscp-frankfurt-wifi/firmware/security_responder/build/bootloader/esp-idf/esptool_py && /home/akhe/.espressif/python_env/idf5.0_py3.10_env/bin/python /usr/local/src/esp/esp-idf-v5.0.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /usr/local/src/VSCP/can4vscp-frankfurt-wifi/firmware/security_responder/build/bootloader/bootloader.bin
Bootloader binary size 0x6ca0 bytes. 0x360 bytes (3%) free.
[2/3] cd /usr/local/src/esp/esp-idf-v5.0.1/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/usr/local/src/esp/esp-idf-v5.0.1 -D "SERIAL_TOOL=/home/akhe/.espressif/python_env/idf5.0_py3.10_env/bin/python;;/usr/local/src/esp/esp-idf-v5.0.1/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/usr/local/src/VSCP/can4vscp-frankfurt-wifi/firmware/security_responder/build -P /usr/local/src/esp/esp-idf-v5.0.1/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB2 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 security_responder.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port /dev/ttyUSB2
Connecting......
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:50:e3:80:10:bc
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000b3fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 27808 bytes to 17334...
Writing at 0x00001000... (50 %)
Writing at 0x000077c2... (100 %)
Wrote 27808 bytes (17334 compressed) at 0x00001000 in 0.8 seconds (effective 274.0 kbit/s)...
Hash of data verified.
Compressed 670992 bytes to 427561...
Writing at 0x00010000... (3 %)
Writing at 0x0001c6c9... (7 %)
Writing at 0x0002221d... (11 %)
Writing at 0x00028d37... (14 %)
Writing at 0x000325dc... (18 %)
Writing at 0x00037e42... (22 %)
Writing at 0x0003d6ea... (25 %)
Writing at 0x000434a8... (29 %)
Writing at 0x00048f6b... (33 %)
Writing at 0x0004f770... (37 %)
Writing at 0x00055266... (40 %)
Writing at 0x0005a43d... (44 %)
Writing at 0x0005f8fe... (48 %)
Writing at 0x00064b22... (51 %)
Writing at 0x0006a324... (55 %)
Writing at 0x0006fa4c... (59 %)
Writing at 0x00075652... (62 %)
Writing at 0x0007ab9e... (66 %)
Writing at 0x000806cd... (70 %)
Writing at 0x00086066... (74 %)
Writing at 0x0008b846... (77 %)
Writing at 0x00094684... (81 %)
Writing at 0x0009c68b... (85 %)
Writing at 0x000a295c... (88 %)
Writing at 0x000a82ff... (92 %)
Writing at 0x000ade61... (96 %)
Writing at 0x000b31cd... (100 %)
Wrote 670992 bytes (427561 compressed) at 0x00010000 in 9.7 seconds (effective 552.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 396.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
